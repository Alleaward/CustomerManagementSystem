@model CustomerManagementSystem.ViewModels.InvoiceDisplay

@{
    ViewBag.Title = "AddInvoice";
}

<h2>AddInvoice</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Invoice</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!-- Get the business number from the URL and display it as readonly  "Business Number: # (Business Name here)" -->
    <p>Business Number: #@Html.DisplayFor(model => model.BusinessNumber) (@Html.DisplayFor(model => model.BusinessName))</p>
    <p>
        <a href="@Url.Action("AddCustomer/" + @Model.BusinessNumber, "BusinessAccount")" class="">Add a new customer</a>
    </p>
    <p>OR</p>
    <p>Returning Customer?</p>
    <select>
        @foreach (var item in Model.Customers)
        {
            <option>@item.CustomerName</option>
        }
    </select>


    <p>-------------------------------------------------------------------</p>
    <p>Add orders section (probably use a loop to create several forms?)</p>

    <p>
        <a href="@Url.Action("AddInvoiceItem/" + @Model.BusinessNumber, "BusinessAccount")" class="">Add a new invoice item.</a>
    </p>

    <p>-------------------------------------------------------------------</p>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, "Notes:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubTotal, "Subtotal:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SubTotal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SubTotal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tax, "Tax: ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TotalCost, "Total Cost:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalCost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalCost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
